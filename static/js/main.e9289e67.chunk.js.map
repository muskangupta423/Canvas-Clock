{"version":3,"sources":["components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","drawClock","ctx","radius","arc","Math","PI","fillStyle","fill","drawFace","drawNumbers","drawTime","grad","beginPath","createRadialGradient","addColorStop","strokeStyle","lineWidth","stroke","angle","number","font","textBaseline","textAlign","rotate","translate","fillText","toString","canvas","this","refs","getContext","height","setInterval","now","Date","hour","getHours","minute","getMinutes","second","getSeconds","drawHand","pos","length","width","lineCap","moveTo","lineTo","Fragment","className","ref","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9289e67.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Clock extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.canvas\r\n        const ctx = canvas.getContext(\"2d\")\r\n        var radius = canvas.height / 2;\r\n        ctx.translate(radius, radius);\r\n        radius = radius * 0.90;\r\n        setInterval(() => this.drawClock(ctx,radius) , 1000);\r\n    }\r\n\r\n    drawClock = (ctx,radius) => {\r\n        ctx.arc(0, 0, radius, 0 , 2 * Math.PI);\r\n        ctx.fillStyle = \"#282c34\";\r\n        ctx.fill();\r\n        this.drawFace(ctx, radius);\r\n        this.drawNumbers(ctx,radius);\r\n        this.drawTime(ctx,radius);\r\n    }\r\n\r\n    drawFace = (ctx,radius) => {\r\n        var grad;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = '#282c34';\r\n        ctx.fill();\r\n\r\n        grad = ctx.createRadialGradient(0, 0 ,radius * 0.95, 0, 0, radius * 1.05);\r\n        grad.addColorStop(0, 'white');\r\n        grad.addColorStop(0.5, '#282c34');\r\n        grad.addColorStop(1, '#333');\r\n        ctx.strokeStyle = grad;\r\n        ctx.lineWidth = radius*0.1;\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius * 0.08, 0, 2 * Math.PI);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fill();\r\n    }\r\n\r\n    drawNumbers = (ctx,radius) => {\r\n        var angle, number;\r\n        \r\n        ctx.font = radius * 0.14 + \"px arial\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.textAlign = \"center\";\r\n        for(number = 1; number < 13; number++){\r\n            angle = number * Math.PI / 6;\r\n            ctx.rotate(angle);\r\n            ctx.translate(0, -radius * 0.85);\r\n            ctx.rotate(-angle);\r\n            ctx.fillText(number.toString(), 0, 0);\r\n            ctx.rotate(angle);\r\n            ctx.translate(0, radius * 0.85);\r\n            ctx.rotate(-angle);\r\n        }\r\n    }\r\n\r\n    drawTime(ctx, radius){\r\n        var now = new Date();\r\n        var hour = now.getHours();\r\n        var minute = now.getMinutes();\r\n        var second = now.getSeconds();\r\n        //hour\r\n        hour = hour%12;\r\n        hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));\r\n        this.drawHand(ctx, hour, radius*0.4, radius*0.07);\r\n        //minute\r\n        minute = (minute*Math.PI/30)+(second*Math.PI/(30*60));\r\n        this.drawHand(ctx, minute, radius*0.6, radius*0.07);\r\n        // second\r\n        second = (second*Math.PI/30);\r\n        this.drawHand(ctx, second, radius*0.8, radius*0.02);\r\n    }\r\n\r\n    drawHand(ctx, pos, length, width) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.lineCap = \"round\";\r\n        ctx.moveTo(0,0);\r\n        ctx.rotate(pos);\r\n        ctx.lineTo(0, -length);\r\n        ctx.stroke();\r\n        ctx.rotate(-pos);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                \r\n                <div className=\"clockCanvas\">\r\n                <h1>Canvas Clock using React JS</h1>\r\n                    <canvas ref=\"canvas\" width={350} height={350} />\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock","import React from \"react\";\r\nimport Clock from \"./components/Clock\";\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Clock/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}